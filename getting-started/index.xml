<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Getting Started on Suil C++ Framework</title><link>https://dccarter.github.io/getting-started/</link><description>Recent content in Getting Started on Suil C++ Framework</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://dccarter.github.io/getting-started/index.xml" rel="self" type="application/rss+xml"/><item><title>Requirements</title><link>https://dccarter.github.io/getting-started/requirements/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dccarter.github.io/getting-started/requirements/</guid><description>Environment Dependencies Required Libraries Environment SCF currently targets Linux environments such as Ubuntu and Alpine. It has been tested on Alpine and Ubuntu x86_64 architecture. Support for other architectures hasn&amp;rsquo;t been tested, but supporting such architectures will require adding/verifying support for them on Suil/Libmill.
Linux OS C++2a the build is continuously tested with gcc-10.2 but any other gcc compiler version that supports C++2a should work, otherwise the effort to make it work will be minimal Target compilation CPU should be x86_64.</description></item><item><title>Developing With Docker</title><link>https://dccarter.github.io/getting-started/develop-with-docker/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dccarter.github.io/getting-started/develop-with-docker/</guid><description>Development With Docker Useful Docker Images Visual Studio Code Remote Development Development With Docker The good news is that this project includes a prebuilt container with all dependencies pre-installed that can be used for development or continuous integration.
Useful Docker Images The following docker images will help when developing SCF or with developing with SCF. Their Dockerfiles are currently hosted in a GitLab Group and have minimal CI.</description></item><item><title>How to Compile</title><link>https://dccarter.github.io/getting-started/how-to-compile/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dccarter.github.io/getting-started/how-to-compile/</guid><description>SCF thrives to be a framework that can be used to create micro service components in C++. To that end the framework leans towards development with docker for docker. These instructions were tested docker but should be applicable even without docker as long as dependencies are installed. Clone the the repo
git clone https://github.com/dccarter/suil.git This optional step opens up suil project in a docker container.</description></item><item><title>Tutorial</title><link>https://dccarter.github.io/getting-started/app-dev-tutorial/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dccarter.github.io/getting-started/app-dev-tutorial/</guid><description>Develop With SCF Getting started with a template project A Closer Look at CMakeLists.txt Conclusion It is really easy to develop applications against SCF. One either has to compile and generate artifacts from SCF and create an application that links against them.
Develop With SCF SCF provides CMake utility scripts to simplify developing applications or libraries that depend on SCF. All the developer needs is an SCF build and Suil Project Template.</description></item></channel></rss>